(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{209:function(t,e,s){t.exports=s.p+"assets/img/TCPIP.f0be5641.jpg"},242:function(t,e,s){"use strict";s.r(e);var a=s(2),n=Object(a.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup","aria-hidden":"true"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),a("p",[t._v("Tools used for networking.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" upgrade\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" netcat-openbsd tcpdump "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("traceroute")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mtr")]),t._v("\n")])])]),a("h1",{attrs:{id:"theory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#theory","aria-hidden":"true"}},[t._v("#")]),t._v(" Theory")]),t._v(" "),a("h2",{attrs:{id:"http-tcp-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-tcp-model","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP / TCP Model")]),t._v(" "),a("p",[t._v("Each of these depends on the one below. Some of these don't belong on a specific layer.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(209),alt:"TEA"}})]),t._v(" "),a("p",[t._v("HTTP = Hypertext Transfer Protocol"),a("br"),t._v("\nTCP = Transmission Control Protocol")]),t._v(" "),a("p",[t._v("All traffic is split up into messages called packets, sent between two computers in a stream, with the addresses of the sender and recipient in each one.")]),t._v(" "),a("p",[t._v('HTTP is needed so that communicating systems can understand each other. TCP just provides "envelopes" that can transfer bytes around the network.')]),t._v(" "),a("p",[t._v("An application protocol assigns structure and meaning to the contents of the envelopes.")]),t._v(" "),a("p",[a("strong",[t._v("If you speak English and I send you a letter written in French, you'll still get the letter, but you won't understand it.")])]),t._v(" "),a("p",[t._v("HTTP is implemented in browsers and web servers, while TCP in the operating system.")]),t._v(" "),a("h4",{attrs:{id:"simple-http-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-http-request","aria-hidden":"true"}},[t._v("#")]),t._v(" Simple HTTP Request")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTP header")]),t._v("\nGET /posts/1 HTTP/1.1\nHost: jsonplaceholder.typicode.com\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Manual request - Returns header and body")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET /posts/1 HTTP/1.1\\r\\nHost:jsonplaceholder.typicode.com\\r\\n\\r\\n'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" jsonplaceholder.typicode.com 80\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Just the body")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" jsonplaceholder.typicode.com/posts/1\n")])])]),a("h2",{attrs:{id:"ports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ports","aria-hidden":"true"}},[t._v("#")]),t._v(" Ports")]),t._v(" "),a("p",[t._v("Listening on a port is like waiting for a phone call on a specific phone number.")]),t._v(" "),a("p",[t._v("Ports let servers distinguish one service from another on the same host and wait for someone to connect.")]),t._v(" "),a("p",[t._v("Normally a server has well known ports for it's applications. ex. HTTP uses "),a("code",[t._v("port 80")]),t._v(" and SSH uses "),a("code",[t._v("port 22")]),t._v(". The client initiates a connection, and it's associated with an arbitrary port on its end.")]),t._v(" "),a("p",[t._v("Only one program can listen to a port in a given moment. Once started, the program can start child processe to listen for multiple connections on the same port i.e. a web server.")]),t._v(" "),a("p",[t._v("The port range that a normal (non-root) user can listen on is "),a("code",[t._v("1024")]),t._v(" through "),a("code",[t._v("65535")]),t._v(". Root access (including sudo)can listen on ports down to 1.")]),t._v(" "),a("p",[t._v("If the other side doesn't pick up, an RST (Reset packet) error message is sent back.")]),t._v(" "),a("h1",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS")]),t._v(" "),a("p",[t._v("It's basically a phonebook for IP addresses.")]),t._v(" "),a("p",[t._v("An "),a("code",[t._v("A Record")]),t._v(" is matched with an IP address, so when someone looks for "),a("code",[t._v("www.google.com")]),t._v(", the A record is referenced and the IP address is sent back to the user.")]),t._v(" "),a("p",[t._v("The DNS resolver i.e. client code is built into the OS.")]),t._v(" "),a("p",[a("strong",[t._v("CNAME")]),t._v(" - Canonical Name i.e. alias for a domain."),a("br"),t._v(" "),a("strong",[t._v("AAAA")]),t._v(" - IPv6 equivalent to an A record."),a("br"),t._v(" "),a("strong",[t._v("NS")]),t._v(" - DNS Name server. The NS record for a particular domain specifies which DNS has the records.")]),t._v(" "),a("h1",{attrs:{id:"tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tools","aria-hidden":"true"}},[t._v("#")]),t._v(" Tools")]),t._v(" "),a("h2",{attrs:{id:"ping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ping","aria-hidden":"true"}},[t._v("#")]),t._v(" ping")]),t._v(" "),a("p",[t._v("It sends individual packets to test if traffic can get from one address to another, and back.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ping")]),t._v(" 8.8.8.8\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# send 5 packets")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ping")]),t._v(" -c 5 google.com\n")])])]),a("h4",{attrs:{id:"unknown-host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unknown-host","aria-hidden":"true"}},[t._v("#")]),t._v(" unknown host")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/resolv.conf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add nameserver 8.8.8.8")]),t._v("\n")])])]),a("h2",{attrs:{id:"lsof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lsof","aria-hidden":"true"}},[t._v("#")]),t._v(" lsof")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("lsof")]),t._v(" utility lists open files, including network sockets (listening or connected).")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List only network sockets")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -i\n")])])]),a("h2",{attrs:{id:"nc-netcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nc-netcat","aria-hidden":"true"}},[t._v("#")]),t._v(" nc / netcat")]),t._v(" "),a("p",[a("code",[t._v("netcat")]),t._v(" is a tool for manually talking to servers, by connecting to a port and sending a string over it. It's a thing wrapper over TCP.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" en.wikipedia.org 80\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" localhost 22\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" gmail-smtp-in.l.google.com 80\n")])])]),a("p",[t._v("To illustrate, we can use two terminals to talk to each other. Anything typed at the second console will be concatenated to the first, and vice-versa. This is a simple TCP server. The connection is ended with "),a("code",[t._v("CTRL")]),t._v(" + "),a("code",[t._v("d")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# terminal 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" -l 3456 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen for an incoming connection on port 3456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# typed text")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# terminal 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" 127.0.0.1 3456 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect to the machine and port being listened on")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# typed text")]),t._v("\n")])])]),a("p",[t._v("Commands can be sent via a "),a("code",[t._v("pipe")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" netcat server 80\n")])])]),a("p",[a("code",[t._v("netcat")]),t._v(" doesn't know anything about forming HTTP request, but in combination with "),a("code",[t._v("printf")]),t._v(" and "),a("code",[t._v("piping")]),t._v(", it can be done.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HEAD / HTTP/1.1\\r\\nHost: google.com\\r\\n\\r\\n'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" google.com 80\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET /posts/1 HTTP/1.1\\r\\nHost:jsonplaceholder.typicode.com\\r\\n\\r\\n'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nc")]),t._v(" jsonplaceholder.typicode.com 80\n")])])]),a("h2",{attrs:{id:"host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host","aria-hidden":"true"}},[t._v("#")]),t._v(" host")]),t._v(" "),a("p",[t._v("Used for looking up records in the DNS.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns all the records")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" google.com\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns just the A record")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" -t a google.com\n")])])]),a("h2",{attrs:{id:"dig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dig","aria-hidden":"true"}},[t._v("#")]),t._v(" dig")]),t._v(" "),a("p",[t._v("Similar to "),a("code",[t._v("host")]),t._v(" in showing DNS records, but in a way more readable for scripts and closer to the way they are stored in the DNS configuration files.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" google.com\n")])])]),a("h1",{attrs:{id:"static-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-server","aria-hidden":"true"}},[t._v("#")]),t._v(" Static server")]),t._v(" "),a("p",[t._v("This will start a static web server on port "),a("code",[t._v("8000")]),t._v(". The command has to be run in the directory with the "),a("code",[t._v("index.html")]),t._v(" file.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("python -m SimpleHTTPServer 8080\n")])])]),a("h1",{attrs:{id:"networking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#networking","aria-hidden":"true"}},[t._v("#")]),t._v(" Networking")]),t._v(" "),a("p",[a("strong",[t._v("Gateway")]),t._v(" is the router address we are talking to in order to connect to the rest of the network/internet.")]),t._v(" "),a("p",[a("code",[t._v("127.x.x.x")]),t._v(" - Your computer."),a("br"),t._v(" "),a("code",[t._v("192.168.0.x")]),t._v(" - Local address created by a router.")]),t._v(" "),a("p",[a("code",[t._v("ifconfig")]),t._v(" - Check IP address."),a("br"),t._v(" "),a("code",[t._v("ping 8.8.8.8")]),t._v(" - Ping IP address."),a("br"),t._v(" "),a("code",[t._v("netstat -tupln")]),t._v(" - Check open ports.")]),t._v(" "),a("p",[a("code",[t._v("cat etc/network/interfaces")]),t._v(" - Shows the interfaces brought up after booting.")]),t._v(" "),a("p",[a("code",[t._v("/etc/hosts")]),t._v(" is used to simulate a domain for an IP address. Add "),a("code",[t._v("127.0.0.1 domain.com")]),t._v(" to avoid typing the IP address.")])])},[],!1,null,null,null);e.default=n.exports}}]);
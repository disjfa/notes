(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{203:function(t,a,s){t.exports=s.p+"assets/img/arduino_led.fb3f3977.jpg"},222:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"arduino"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arduino","aria-hidden":"true"}},[t._v("#")]),t._v(" Arduino")]),t._v(" "),n("p",[n("strong",[t._v("Arduino")]),t._v(" is a development board utilizing an "),n("strong",[t._v("AVR ATMEGA328")]),t._v(" MCU (microcontroller). An MCU can't do much unless it's in a circuit.")]),t._v(" "),n("p",[t._v("The more professional option is to use a separate development board/launchpad for the MCUs. The idea is to plug in the MCU into it, program it, and take it out to be soldered in a circuit, rather than use the whole board like the Arduino.")]),t._v(" "),n("p",[t._v("Other popular microcontrollers: 8051, PIC, AVR, ARM, MSP")]),t._v(" "),n("p",[t._v("Microcontrollers have application specific small processing power while microprocessors have general purpose large processing power.")]),t._v(" "),n("p",[t._v("Microcontrollers have built in RAM, ROM and other peripherals in a single chip. Microprocessors have only the CPU, and other peripherals, RAM, ROM should be connected externally.")]),t._v(" "),n("h1",{attrs:{id:"programming"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#programming","aria-hidden":"true"}},[t._v("#")]),t._v(" Programming")]),t._v(" "),n("p",[t._v("Unlike most previous programmable circuit boards, the Arduino does not need a separate piece of hardware (called a programmer) in order to load new code onto the board â€“ you can simply use a USB cable.")]),t._v(" "),n("p",[t._v("The Arduino IDE uses a simplified version of C++.")]),t._v(" "),n("p",[t._v("Arduino basically works by setting something upfront once and then by trapping execution in an infinite loop.")]),t._v(" "),n("p",[t._v("The code "),n("strong",[t._v("will not")]),t._v(" compile without "),n("code",[t._v("setup()")]),t._v(" and "),n("code",[t._v("loop()")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Setup code, run once")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Main code, run repeatedly")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h1",{attrs:{id:"setup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setup","aria-hidden":"true"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),n("p",[t._v("We can select the type of board we are working with at tools > board, or add ones with the boards manager.")]),t._v(" "),n("p",[t._v("We define the way we are connecting to the board via a port at tools > port. It changes each time the board is disconnected.")]),t._v(" "),n("h1",{attrs:{id:"upload"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#upload","aria-hidden":"true"}},[t._v("#")]),t._v(" Upload")]),t._v(" "),n("p",[t._v("The code is compiled and uploaded into the chip via the USB cable. The built-in small LED light will blink in the frequency of the loop to indicate that it's working.")]),t._v(" "),n("h1",{attrs:{id:"serial-monitor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#serial-monitor","aria-hidden":"true"}},[t._v("#")]),t._v(" Serial Monitor")]),t._v(" "),n("p",[t._v("We can see what Arduino outputs via tools > serial monitor. If we are getting weird characters, we need to set the "),n("strong",[t._v("baud")]),t._v(" value to the correct one.")]),t._v(" "),n("h1",{attrs:{id:"pull-up-resistor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pull-up-resistor","aria-hidden":"true"}},[t._v("#")]),t._v(" Pull-up resistor")]),t._v(" "),n("p",[t._v("Instead of adding resistors manually, we can use the built-in functionality.")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pinMode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("button"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" INPUT_PULLUP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h1",{attrs:{id:"digitalwrite-vs-analogwrite"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#digitalwrite-vs-analogwrite","aria-hidden":"true"}},[t._v("#")]),t._v(" digitalWrite vs analogWrite")]),t._v(" "),n("p",[n("code",[t._v("digitalWrite")]),t._v(" will set the specified pin to one of two states - HIGH/LOW, which equate to 5v (3.3v on some boards) and ground respectively.")]),t._v(" "),n("p",[n("code",[t._v("analogWrite")]),t._v(" can vary by the type of output used. It will set the pin to a periodic high/low signal, where the percentage of the signal spent high is proportional to the value written. Ex. "),n("code",[t._v("analogWrite(PIN, 255)")]),t._v(".")]),t._v(" "),n("p",[t._v("pinMode(buzzerPin, OUTPUT);")]),t._v(" "),n("h1",{attrs:{id:"simple-blinking-led-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#simple-blinking-led-example","aria-hidden":"true"}},[t._v("#")]),t._v(" Simple blinking LED example")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" LED "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pinMode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OUTPUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HIGH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(203),alt:"Arduino LED"}})]),t._v(" "),n("h1",{attrs:{id:"cop-car"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cop-car","aria-hidden":"true"}},[t._v("#")]),t._v(" Cop Car")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" LED_RED "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" LED_BLUE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" BUZZER "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pinMode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED_RED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OUTPUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pinMode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED_BLUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OUTPUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pinMode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BUZZER"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OUTPUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BUZZER"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED_RED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HIGH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED_RED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BUZZER"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED_BLUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HIGH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LED_BLUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{225:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"logical"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logical","aria-hidden":"true"}},[t._v("#")]),t._v(" Logical")]),t._v(" "),a("p",[a("code",[t._v("&&")]),t._v(" - AND\n"),a("code",[t._v("||")]),t._v(" - OR")]),t._v(" "),a("h1",{attrs:{id:"redirection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redirection","aria-hidden":"true"}},[t._v("#")]),t._v(" Redirection")]),t._v(" "),a("p",[a("code",[t._v(">")]),t._v(" - Redirect standard output and "),a("strong",[t._v("overwrite")]),t._v("."),a("br"),t._v(" "),a("code",[t._v(">>")]),t._v(" - Redirect standard output and "),a("strong",[t._v("append")]),t._v("."),a("br"),t._v(" "),a("code",[t._v("<")]),t._v(" - Redirect input to another command. Ex. "),a("code",[t._v("mail mike@somewhere.org < to_do.txt")])]),t._v(" "),a("h1",{attrs:{id:"piping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#piping","aria-hidden":"true"}},[t._v("#")]),t._v(" Piping")]),t._v(" "),a("p",[a("code",[t._v("|")]),t._v(" - Uses the "),a("strong",[t._v("output")]),t._v(" of one command as the "),a("strong",[t._v("input")]),t._v(" of another.")]),t._v(" "),a("h1",{attrs:{id:"command-substitution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command-substitution","aria-hidden":"true"}},[t._v("#")]),t._v(" Command Substitution")]),t._v(" "),a("p",[a("code",[t._v("$(PROGRAM_PATH)")]),t._v(" - Use program output as variable. Ex. "),a("code",[t._v('echo "$(/bin/date) - Hi" >> logfile.log')])]),t._v(" "),a("h1",{attrs:{id:"grep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grep","aria-hidden":"true"}},[t._v("#")]),t._v(" grep")]),t._v(" "),a("p",[t._v("Only works for searching files or standard outputs.")]),t._v(" "),a("p",[a("code",[t._v("grep <CRITERIA> <PATH>")]),t._v(" - Returns all the lines containing the search criteria.")]),t._v(" "),a("h1",{attrs:{id:"file-movement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-movement","aria-hidden":"true"}},[t._v("#")]),t._v(" File movement")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Navigate to D:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" /mnt/d\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List all files WITH new line. Pasted in Excel gives one name per cell vertically.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.txt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A && B  â€“ Run B only if A succeeded")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# One command from main folder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" 1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wihtout .jpg extension.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" 1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" -d "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".jpg"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" -d "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".jpg"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Navigate to folder with files. List all files and replace new line with comma (,) and export one folder up into .csv file.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\n"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.csv\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Append (>>) files from other folder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\n"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.csv\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List the different files from folder 1 vs folder 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ls -1a folder1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ls -1a folder2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check for different files not present in folder2 from folder1, and MOVE those in folder3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" -rcC --compare-dest"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("folder2/ folder1/ folder3/\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find all the files with a space in the name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" ./ -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* *"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find all the files with a space in the name AND move them")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" ./ -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* *"')]),t._v(" -exec "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/folder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" +\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find all the files with a dash - in the name AND move them")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" ./ -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*-*"')]),t._v(" -exec "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/temp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" +\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find all files with 4 characters")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" ./ -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"????.jpg"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find all files with 4 characters AND move them")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" ./ -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"????.jpg"')]),t._v(" -exec "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/folder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" +\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Count number of files in folder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Count number of files in folder with 6 characters.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" ./ -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"??????.jpg"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List just the names of the images (without the extension).")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/\\..*$//'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pics.txt\n")])])]),a("h1",{attrs:{id:"image-manipulation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#image-manipulation","aria-hidden":"true"}},[t._v("#")]),t._v(" Image manipulation")]),t._v(" "),a("p",[t._v("Requires the "),a("code",[t._v("imagemagick")]),t._v(" package")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" imagemagick\n")])])]),a("h3",{attrs:{id:"resizing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resizing","aria-hidden":"true"}},[t._v("#")]),t._v(" Resizing")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Resize image to specific dimensions, while trying to keep aspect ratio.")]),t._v("\nconvert image.jpg -resize 492x492"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" resized_image.jpg\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Bulk resizing of images in a folder with conversion statuses, saved in a specified folder.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" *.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" convert "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" -resize 492x492"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/resampled/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" converted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("h3",{attrs:{id:"resampling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resampling","aria-hidden":"true"}},[t._v("#")]),t._v(" Resampling")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Reduce the image quality. Adjust the quality parameter 1-100.")]),t._v("\nconvert image.jpg -sampling-factor 4:2:0 -strip -quality 1 -interlace JPEG -colorspace RGB resampled_image.jpg\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Bulk resampling of images in a folder with conversion statuses, saved in a specified folder.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" *.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" convert "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" -sampling-factor 4:2:0 -strip -quality 1 -interlace JPEG -colorspace RGB "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/resampled/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" resampled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("h3",{attrs:{id:"watermarking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watermarking","aria-hidden":"true"}},[t._v("#")]),t._v(" Watermarking")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Watermarking")]),t._v("\ncomposite -dissolve 30% -gravity center watermark2.jpg image.jpg watermarked_image.jpg\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Bulk Watermarking (Save in a specific folder)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" *.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" composite -dissolve 30% -gravity center "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/watermark.jpg "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" ./watered/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" watermarked"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])])])},[],!1,null,null,null);s.default=n.exports}}]);